// Code generated by entc, DO NOT EDIT.

package abituriententry

import (
	"fmt"
)

const (
	// Label holds the string label denoting the abituriententry type in the database.
	Label = "abiturient_entry"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldNumber holds the string denoting the number field in the database.
	FieldNumber = "number"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldStatementGiven holds the string denoting the statement_given field in the database.
	FieldStatementGiven = "statement_given"
	// FieldOriginalGiven holds the string denoting the original_given field in the database.
	FieldOriginalGiven = "original_given"
	// FieldSpeciality holds the string denoting the speciality field in the database.
	FieldSpeciality = "speciality"
	// FieldProgram holds the string denoting the program field in the database.
	FieldProgram = "program"
	// FieldForm holds the string denoting the form field in the database.
	FieldForm = "form"
	// FieldBasis holds the string denoting the basis field in the database.
	FieldBasis = "basis"
	// FieldSum holds the string denoting the sum field in the database.
	FieldSum = "sum"
	// Table holds the table name of the abituriententry in the database.
	Table = "abiturient_entries"
)

// Columns holds all SQL columns for abituriententry fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldNumber,
	FieldStatus,
	FieldType,
	FieldStatementGiven,
	FieldOriginalGiven,
	FieldSpeciality,
	FieldProgram,
	FieldForm,
	FieldBasis,
	FieldSum,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultStatementGiven holds the default value on creation for the "statement_given" field.
	DefaultStatementGiven bool
	// DefaultOriginalGiven holds the default value on creation for the "original_given" field.
	DefaultOriginalGiven bool
)

// Form defines the type for the "form" enum field.
type Form string

// Form values.
const (
	FormOch      Form = "och"
	FormZaoch    Form = "zaoch"
	FormOchZaoch Form = "och-zaoch"
)

func (f Form) String() string {
	return string(f)
}

// FormValidator is a validator for the "form" field enum values. It is called by the builders before save.
func FormValidator(f Form) error {
	switch f {
	case FormOch, FormZaoch, FormOchZaoch:
		return nil
	default:
		return fmt.Errorf("abituriententry: invalid enum value for form field: %q", f)
	}
}
